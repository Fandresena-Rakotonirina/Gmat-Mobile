import type { NativeSyntheticEvent, TextInput as NativeTextInput, TextInputKeyPressEventData } from 'react-native';
import type { Dispatch, SetStateAction, MutableRefObject } from 'react';
export default function useHighlighted<ItemT>({ inputValue, setInputValue, data, multiple, values, onChangeMultiple, onChangeSingle, inputRef, setVisible, }: {
    values: ItemT[] | null | undefined;
    inputValue: string;
    setInputValue: Dispatch<SetStateAction<string>>;
    data: readonly ItemT[] | null | undefined;
    multiple: undefined | boolean;
    onChangeMultiple: (v: ItemT[]) => void;
    onChangeSingle: (v: ItemT | undefined) => void;
    inputRef: MutableRefObject<NativeTextInput | null>;
    setVisible: Dispatch<SetStateAction<boolean>>;
}): {
    handleKeyPress: (e: NativeSyntheticEvent<TextInputKeyPressEventData>) => void;
    highlightedIndex: number;
};
