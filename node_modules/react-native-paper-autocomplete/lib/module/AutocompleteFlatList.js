function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import Animated from 'react-native-reanimated';
import { AutocompleteContext } from './AutocompleteContext';
import * as React from 'react';
import { useScrollableProps } from './shared';

function AutocompleteFlatList(rest, ref) {
  const {
    scrollableRef,
    scrollX,
    scrollY,
    scrollableProps
  } = useScrollableProps(rest, ref);
  const Flat = Animated.FlatList;
  return /*#__PURE__*/React.createElement(AutocompleteContext.Provider, {
    value: {
      scrollableRef,
      scrollX,
      scrollY
    }
  }, /*#__PURE__*/React.createElement(Flat, _extends({}, rest, scrollableProps)));
}

export default /*#__PURE__*/React.forwardRef(AutocompleteFlatList);
//# sourceMappingURL=AutocompleteFlatList.js.map