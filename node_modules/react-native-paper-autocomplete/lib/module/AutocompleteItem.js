function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import { List } from 'react-native-paper';
import * as React from 'react';

function AutocompleteItem({
  testID,
  selected,
  title,
  description,
  icon,
  option,
  onPress,
  highlightedColor
}) {
  return /*#__PURE__*/React.createElement(List.Item, {
    android_disableSound: undefined,
    testID: testID,
    accessibilityRole: "menuitem",
    accessibilityState: {
      selected
    },
    left: icon ? leftProps => /*#__PURE__*/React.createElement(List.Icon, _extends({
      icon: icon
    }, leftProps)) : undefined,
    title: title,
    description: description,
    style: selected ? {
      backgroundColor: highlightedColor
    } : undefined,
    onPress: () => {
      onPress(option);
    }
  });
}

export default /*#__PURE__*/React.memo(AutocompleteItem);
//# sourceMappingURL=AutocompleteItem.js.map