{"version":3,"sources":["usePosition.native.tsx"],"names":["measure","useAnimatedReaction","useSharedValue","useDerivedValue","usePosition","inputContainerRef","scrollX","scrollY","measuredValue","width","height","x","y","pageX","pageY","measured","value"],"mappings":"AACA,SACEA,OADF,EAEEC,mBAFF,EAIEC,cAJF,EAKEC,eALF,QAMO,yBANP;AAQA,eAAe,SAASC,WAAT,CAAqB;AAClCC,EAAAA,iBADkC;AAElCC,EAAAA,OAFkC;AAGlCC,EAAAA;AAHkC,CAArB,EAQZ;AACD,QAAMC,aAAa,GAAGN,cAAc,CAOjC;AACDO,IAAAA,KAAK,EAAE,CADN;AAEDC,IAAAA,MAAM,EAAE,CAFP;AAGDC,IAAAA,CAAC,EAAE,CAHF;AAIDC,IAAAA,CAAC,EAAE,CAJF;AAKDC,IAAAA,KAAK,EAAE,CALN;AAMDC,IAAAA,KAAK,EAAE;AANN,GAPiC,CAApC,CADC,CAiBD;AACA;;AACAb,EAAAA,mBAAmB,CACjB,MAAM;AACJ,WAAOD,OAAO,CAACK,iBAAD,CAAd;AACD,GAHgB,EAIhBU,QAAD,IAAc;AACZP,IAAAA,aAAa,CAACQ,KAAd,GAAsB,EACpB,GAAGD,QADiB;AAEpBD,MAAAA,KAAK,EAAEC,QAAQ,CAACD,KAAT,GAAiBP,OAAO,CAACS,KAFZ;AAGpBH,MAAAA,KAAK,EAAEE,QAAQ,CAACF,KAAT,GAAiBP,OAAO,CAACU;AAHZ,KAAtB;AAKD,GAVgB,CAAnB;AAYA,SAAOb,eAAe,CAAC,MAAM;AAC3B,WAAO;AACLQ,MAAAA,CAAC,EAAEH,aAAa,CAACQ,KAAd,CAAoBH,KAApB,GAA4BL,aAAa,CAACQ,KAAd,CAAoBL,CAD9C;AAELC,MAAAA,CAAC,EAAEJ,aAAa,CAACQ,KAAd,CAAoBF,KAApB,GAA4BN,aAAa,CAACQ,KAAd,CAAoBJ;AAF9C,KAAP;AAID,GALqB,EAKnB,CAACJ,aAAD,EAAgBF,OAAhB,EAAyBC,OAAzB,CALmB,CAAtB;AAMD","sourcesContent":["import type * as React from 'react';\nimport Animated, {\n  measure,\n  useAnimatedReaction,\n  SharedValue,\n  useSharedValue,\n  useDerivedValue,\n} from 'react-native-reanimated';\n\nexport default function usePosition({\n  inputContainerRef,\n  scrollX,\n  scrollY,\n}: {\n  scrollX: SharedValue<number>;\n  scrollY: SharedValue<number>;\n  inputContainerRef: React.RefObject<Animated.View>;\n}) {\n  const measuredValue = useSharedValue<{\n    width: number;\n    height: number;\n    x: number;\n    y: number;\n    pageX: number;\n    pageY: number;\n  }>({\n    width: 0,\n    height: 0,\n    x: 0,\n    y: 0,\n    pageX: 0,\n    pageY: 0,\n  });\n\n  // TODO: make this simple with measure function directly in useDerivedValue\n  // https://github.com/software-mansion/react-native-reanimated/issues/2779\n  useAnimatedReaction(\n    () => {\n      return measure(inputContainerRef);\n    },\n    (measured) => {\n      measuredValue.value = {\n        ...measured,\n        pageY: measured.pageY + scrollY.value,\n        pageX: measured.pageX + scrollX.value,\n      };\n    }\n  );\n  return useDerivedValue(() => {\n    return {\n      x: measuredValue.value.pageX + measuredValue.value.x,\n      y: measuredValue.value.pageY + measuredValue.value.y,\n    };\n  }, [measuredValue, scrollX, scrollY]);\n}\n"]}