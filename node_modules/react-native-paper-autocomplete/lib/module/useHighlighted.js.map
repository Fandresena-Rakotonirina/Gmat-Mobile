{"version":3,"sources":["useHighlighted.tsx"],"names":["React","useLatest","useHighlighted","inputValue","setInputValue","data","multiple","values","onChangeMultiple","onChangeSingle","inputRef","setVisible","highlightedIndex","setHighlightedIndex","useState","highlightedRef","previousData","usePrevious","useEffect","previousItem","current","currentItem","indexOf","exists","before","prev","removeLast","useCallback","filter","_","i","length","pressHighlighted","selectedOption","blur","dataRef","handleKeyPress","e","dataLength","lastIndex","key","nativeEvent","value","ref","useRef","useLayoutEffect"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport type {\n  NativeSyntheticEvent,\n  TextInput as NativeTextInput,\n  TextInputKeyPressEventData,\n} from 'react-native';\nimport useLatest from './useLatest';\nimport type { Dispatch, SetStateAction, MutableRefObject } from 'react';\n\nexport default function useHighlighted<ItemT>({\n  inputValue,\n  setInputValue,\n  data,\n  multiple,\n  values,\n  onChangeMultiple,\n  onChangeSingle,\n\n  inputRef,\n  setVisible,\n}: {\n  values: ItemT[] | null | undefined;\n  inputValue: string;\n  setInputValue: Dispatch<SetStateAction<string>>;\n  data: readonly ItemT[] | null | undefined;\n  multiple: undefined | boolean;\n  onChangeMultiple: (v: ItemT[]) => void;\n  onChangeSingle: (v: ItemT | undefined) => void;\n\n  inputRef: MutableRefObject<NativeTextInput | null>;\n  setVisible: Dispatch<SetStateAction<boolean>>;\n}) {\n  const [highlightedIndex, setHighlightedIndex] = React.useState(0);\n  const highlightedRef = useLatest(highlightedIndex);\n  const previousData = usePrevious(data);\n\n  React.useEffect(() => {\n    if (previousData) {\n      const previousItem = previousData[highlightedRef.current];\n      const currentItem = data?.indexOf(previousItem);\n\n      if (currentItem && currentItem >= 0) {\n        setHighlightedIndex(currentItem);\n        return;\n      }\n    }\n\n    const exists = data?.[highlightedRef.current];\n    if (exists) {\n      return;\n    }\n    const before = data?.[highlightedRef.current - 1];\n    if (before) {\n      setHighlightedIndex((prev) => prev - 1);\n      return;\n    }\n    setHighlightedIndex(0);\n  }, [data, previousData, setHighlightedIndex, highlightedRef]);\n\n  const removeLast = React.useCallback(() => {\n    if (multiple) {\n      onChangeMultiple(\n        (values || []).filter((_, i: number) => i !== (values || []).length - 1)\n      );\n    }\n  }, [multiple, onChangeMultiple, values]);\n\n  const pressHighlighted = React.useCallback(() => {\n    if (multiple) {\n      const selectedOption = data?.[highlightedRef.current];\n      if (selectedOption) {\n        onChangeMultiple([...(values || []), selectedOption]);\n      }\n      setInputValue('');\n    } else {\n      const selectedOption = data?.[highlightedRef.current];\n      onChangeSingle(selectedOption);\n      inputRef.current?.blur();\n      setVisible(false);\n    }\n  }, [\n    data,\n    inputRef,\n    setInputValue,\n    setVisible,\n    highlightedRef,\n    multiple,\n    onChangeMultiple,\n    onChangeSingle,\n    values,\n  ]);\n\n  const dataRef = useLatest(data);\n  const handleKeyPress = React.useCallback(\n    (e: NativeSyntheticEvent<TextInputKeyPressEventData>) => {\n      const dataLength = dataRef.current?.length || 0;\n      const lastIndex = dataLength - 1;\n      const key = e.nativeEvent.key;\n      switch (key) {\n        case 'Backspace':\n          if (inputValue === '') {\n            removeLast();\n          }\n          break;\n        case 'Enter':\n          if (dataLength === 0) {\n            return;\n          }\n          pressHighlighted();\n          break;\n        case 'ArrowDown':\n          if ((dataLength || 0) - 1 >= highlightedRef.current + 1) {\n            setHighlightedIndex((prev) => prev + 1);\n          } else {\n            setHighlightedIndex(0);\n          }\n          break;\n        case 'ArrowUp':\n          if (highlightedRef.current >= 1) {\n            setHighlightedIndex((prev) => prev - 1);\n          } else {\n            setHighlightedIndex(lastIndex);\n          }\n          break;\n        case 'Home':\n          setHighlightedIndex(0);\n          break;\n        case 'End':\n          if (dataLength > 0) {\n            setHighlightedIndex(lastIndex);\n          }\n          break;\n        default:\n      }\n    },\n    [dataRef, highlightedRef, inputValue, pressHighlighted, removeLast]\n  );\n\n  return {\n    handleKeyPress,\n    highlightedIndex,\n  };\n}\n\nfunction usePrevious<T>(\n  value: T\n): React.MutableRefObject<T | undefined>['current'] {\n  const ref = React.useRef<T>();\n  React.useLayoutEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n}\n"]}