import { runOnJS, useAnimatedRef, useAnimatedScrollHandler, useSharedValue } from 'react-native-reanimated';
import { mergeRefs } from './mergeRefs';
export function useScrollableProps({
  onScroll
}, ref) {
  const scrollableRef = useAnimatedRef();
  const scrollX = useSharedValue(0);
  const scrollY = useSharedValue(0);
  const scrollHandler = useAnimatedScrollHandler(e => {
    const {
      x,
      y
    } = e.contentOffset;
    scrollX.value = x;
    scrollY.value = y;

    if (onScroll) {
      // https://github.com/software-mansion/react-native-reanimated/issues/2426
      runOnJS(onScroll)({
        nativeEvent: e
      });
    }
  });
  const scrollableProps = {
    ref: mergeRefs([scrollableRef, ref]),
    scrollEventThrottle: 16,
    keyboardShouldPersistTaps: 'handled',
    onScroll: scrollHandler
  };
  return {
    scrollableRef,
    scrollX,
    scrollY,
    scrollableProps
  };
}
//# sourceMappingURL=shared.js.map