function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import * as React from 'react';
import { useScrollableProps } from './shared';
import { AutocompleteContext } from './AutocompleteContext';
export default function createAutocompleteScrollable(WrappedComponent) {
  return /*#__PURE__*/React.forwardRef(function (rest, ref) {
    const {
      scrollableRef,
      scrollX,
      scrollY,
      scrollableProps
    } = useScrollableProps(rest, ref);
    const WW = WrappedComponent;
    return /*#__PURE__*/React.createElement(AutocompleteContext.Provider, {
      value: {
        scrollableRef,
        scrollX,
        scrollY
      }
    }, /*#__PURE__*/React.createElement(WW, _extends({}, rest, scrollableProps)));
  });
}
//# sourceMappingURL=createAutocompleteScrollable.js.map