"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = usePosition;

var _reactNativeReanimated = require("react-native-reanimated");

function usePosition({
  inputContainerRef,
  scrollX,
  scrollY
}) {
  const measuredValue = (0, _reactNativeReanimated.useSharedValue)({
    width: 0,
    height: 0,
    x: 0,
    y: 0,
    pageX: 0,
    pageY: 0
  }); // TODO: make this simple with measure function directly in useDerivedValue
  // https://github.com/software-mansion/react-native-reanimated/issues/2779

  (0, _reactNativeReanimated.useAnimatedReaction)(() => {
    return (0, _reactNativeReanimated.measure)(inputContainerRef);
  }, measured => {
    measuredValue.value = { ...measured,
      pageY: measured.pageY + scrollY.value,
      pageX: measured.pageX + scrollX.value
    };
  });
  return (0, _reactNativeReanimated.useDerivedValue)(() => {
    return {
      x: measuredValue.value.pageX + measuredValue.value.x,
      y: measuredValue.value.pageY + measuredValue.value.y
    };
  }, [measuredValue, scrollX, scrollY]);
}
//# sourceMappingURL=usePosition.native.js.map