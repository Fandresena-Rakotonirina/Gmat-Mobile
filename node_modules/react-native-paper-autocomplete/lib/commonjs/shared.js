"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useScrollableProps = useScrollableProps;

var _reactNativeReanimated = require("react-native-reanimated");

var _mergeRefs = require("./mergeRefs");

function useScrollableProps({
  onScroll
}, ref) {
  const scrollableRef = (0, _reactNativeReanimated.useAnimatedRef)();
  const scrollX = (0, _reactNativeReanimated.useSharedValue)(0);
  const scrollY = (0, _reactNativeReanimated.useSharedValue)(0);
  const scrollHandler = (0, _reactNativeReanimated.useAnimatedScrollHandler)(e => {
    const {
      x,
      y
    } = e.contentOffset;
    scrollX.value = x;
    scrollY.value = y;

    if (onScroll) {
      // https://github.com/software-mansion/react-native-reanimated/issues/2426
      (0, _reactNativeReanimated.runOnJS)(onScroll)({
        nativeEvent: e
      });
    }
  });
  const scrollableProps = {
    ref: (0, _mergeRefs.mergeRefs)([scrollableRef, ref]),
    scrollEventThrottle: 16,
    keyboardShouldPersistTaps: 'handled',
    onScroll: scrollHandler
  };
  return {
    scrollableRef,
    scrollX,
    scrollY,
    scrollableProps
  };
}
//# sourceMappingURL=shared.js.map