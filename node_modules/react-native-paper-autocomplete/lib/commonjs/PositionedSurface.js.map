{"version":3,"sources":["PositionedSurface.tsx"],"names":["SCROLLING_PADDING","PositionedSurface","scrollableRef","inputContainerRef","children","theme","dropdownWidth","inputContainerHeight","scrollX","scrollY","dimensions","keyboardHeight","position","translateX","value","x","translateY","y","isWeb","Platform","OS","React","useLayoutEffect","timerId","setTimeout","scrollable","current","scrollTo","console","debug","animated","clearTimeout","animatedStyle","transform","top","left","animatedSurfaceStyle","maxHeight","height","StyleSheet","absoluteFill","styles","surface","width","borderRadius","roundness","create","zIndex"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  StyleSheet,\n  Platform,\n  useWindowDimensions,\n  ScrollView,\n} from 'react-native';\nimport Animated, {\n  SharedValue,\n  useAnimatedStyle,\n  useDerivedValue,\n  // FadeInDown,\n} from 'react-native-reanimated';\nimport usePosition from './usePosition';\nimport AnimatedSurface from './AnimatedSurface';\nimport type { MD3DarkTheme } from 'react-native-paper';\nimport useKeyboardHeight from './useKeyboardHeight';\n\nconst SCROLLING_PADDING = 120;\n\nexport default function PositionedSurface({\n  scrollableRef,\n  inputContainerRef,\n  children,\n  theme,\n  dropdownWidth,\n  inputContainerHeight,\n  scrollX,\n  scrollY,\n}: {\n  scrollableRef: React.RefObject<Animated.ScrollView | Animated.FlatList>;\n  inputContainerRef: React.RefObject<Animated.View>;\n  scrollX: SharedValue<number>;\n  scrollY: SharedValue<number>;\n  dropdownWidth: SharedValue<number>;\n  inputContainerHeight: SharedValue<number>;\n  children: any;\n  theme: typeof MD3DarkTheme;\n}) {\n  const dimensions = useWindowDimensions();\n  const keyboardHeight = useKeyboardHeight(dimensions);\n  const position = usePosition({\n    inputContainerRef,\n    scrollX,\n    scrollY,\n  });\n\n  const translateX = useDerivedValue(\n    () => position.value.x - scrollX.value,\n    [position, scrollX]\n  );\n\n  const translateY = useDerivedValue(\n    () => position.value.y + inputContainerHeight.value - scrollY.value,\n    [position, inputContainerHeight, scrollY]\n  );\n  const isWeb = Platform.OS === 'web';\n\n  React.useLayoutEffect(() => {\n    if (isWeb) {\n      return;\n    }\n\n    const timerId = setTimeout(() => {\n      const scrollable = scrollableRef.current as any as ScrollView;\n      if (!scrollable?.scrollTo) {\n        console.debug(\n          '[react-native-paper-autocomplete] no scrollView to scroll in'\n        );\n      }\n      scrollable?.scrollTo?.({\n        x: position.value.x, // - TODO: inputContainer.width?\n        y: position.value.y - SCROLLING_PADDING,\n        animated: true,\n      });\n    }, 100);\n    return () => clearTimeout(timerId);\n  }, [position.value, isWeb, scrollableRef]);\n\n  const animatedStyle = useAnimatedStyle(() => {\n    if (isWeb) {\n      return {\n        transform: [\n          {\n            translateY: translateY.value,\n          },\n          {\n            translateX: translateX.value,\n          },\n        ],\n      };\n    }\n    return {\n      // transform is buggy at least on iOS at inital re-render\n      top: translateY.value,\n      left: translateX.value,\n    };\n  }, [dropdownWidth, translateX, translateY]);\n  const animatedSurfaceStyle = useAnimatedStyle(() => {\n    return {\n      maxHeight:\n        dimensions.height - keyboardHeight.value - SCROLLING_PADDING * 2,\n    };\n  }, [dimensions.height - keyboardHeight.value]);\n\n  return (\n    <Animated.View\n      style={[StyleSheet.absoluteFill, styles.surface, animatedStyle]}\n      pointerEvents=\"box-none\"\n    >\n      <AnimatedSurface\n        // entering={FadeInDown}\n        elevation={5}\n        style={[\n          animatedSurfaceStyle,\n          {\n            width: dropdownWidth.value,\n            borderRadius: theme.roundness,\n          },\n        ]}\n      >\n        {children}\n      </AnimatedSurface>\n    </Animated.View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  surface: { zIndex: 100 },\n});\n"]}