{"version":3,"sources":["PortalContent.tsx"],"names":["PortalContent","children","visible","onPressOutside","ref","React","useRef","StyleSheet","absoluteFill","overflow"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;AAEe,SAASA,aAAT,CAAuB;AACpCC,EAAAA,QADoC;AAEpCC,EAAAA,OAFoC;AAGpCC,EAAAA;AAHoC,CAAvB,EAQZ;AACD,QAAMC,GAAG,GAAGC,KAAK,CAACC,MAAN,CAAa,IAAb,CAAZ;AACA,gCAAgBF,GAAhB,EAAqBD,cAArB;;AAEA,MAAI,CAACD,OAAL,EAAc;AACZ,WAAO,IAAP;AACD;;AACD,sBACE,oBAAC,wBAAD,qBACE,oBAAC,iBAAD;AACE,IAAA,GAAG,EAAEE,GADP;AAEE,IAAA,aAAa,EAAC,UAFhB;AAGE,IAAA,KAAK,EAAE,CACLG,wBAAWC,YADN,EAEL;AACEC,MAAAA,QAAQ,EAAE;AADZ,KAFK,CAHT,CASE;AATF;AAUE,IAAA,qBAAqB,EAAEP;AAVzB,KAYGD,QAZH,CADF,CADF;AAkBD","sourcesContent":["import * as React from 'react';\nimport usePressOutside from './usePressOutside';\nimport { View, StyleSheet } from 'react-native';\nimport { Portal } from 'react-native-paper';\n\nexport default function PortalContent({\n  children,\n  visible,\n  onPressOutside,\n}: {\n  children: any;\n  visible: boolean;\n  onPressOutside: () => void;\n}) {\n  const ref = React.useRef(null);\n  usePressOutside(ref, onPressOutside);\n\n  if (!visible) {\n    return null;\n  }\n  return (\n    <Portal>\n      <View\n        ref={ref}\n        pointerEvents=\"box-none\"\n        style={[\n          StyleSheet.absoluteFill,\n          {\n            overflow: 'hidden',\n          },\n        ]}\n        // @ts-ignore web only prop\n        accessibilityExpanded={visible}\n      >\n        {children}\n      </View>\n    </Portal>\n  );\n}\n"]}